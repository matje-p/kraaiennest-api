## Triggering push 2
name: Deploy to EC2

on:
  push:
    branches:
      - main # Adjust to your specific branch if needed
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::539247482630:role/service-role/UpdateSecurityGroupForGitHubActions-role-skd8ql4d # Replace with your AWS Account ID and Role Name
          aws-region: eu-north-1

      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Whitelist runner IP address
        run: |
          PORTS=(22) # Add other ports if necessary, e.g., 80 for HTTP, 443 for HTTPS
          for PORT in "${PORTS[@]}"; do
            aws ec2 authorize-security-group-ingress \
              --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
              --protocol tcp \
              --port $PORT \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32
          done

      - name: SSH into EC2 and perform tasks
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "${EC2_SSH_KEY}" > key.pem
          chmod 400 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST 'your deployment commands here' # Replace with your actual deployment commands

      - name: Revoke runner IP address
        run: |
          PORTS=(22) # Match the ports used in the whitelist step
          for PORT in "${PORTS[@]}"; do
            aws ec2 revoke-security-group-ingress \
              --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
              --protocol tcp \
              --port $PORT \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32
          done
